// <auto-generated />
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220621200646_First Create")]
    partial class FirstCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.LogisticsDetails.LogisticsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("LogisticsDetails", (string)null);
                });

            modelBuilder.Entity("Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogisticsUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogisticsUserId")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.LogisticsDetails.LogisticsDetail", b =>
                {
                    b.OwnsOne("Domain.LogisticsDetails.Dimensions.Dimension", "Dimension", b1 =>
                        {
                            b1.Property<int>("LogisticsDetailId")
                                .HasColumnType("int");

                            b1.Property<double>("CalculatedDimension")
                                .HasMaxLength(255)
                                .HasColumnType("float");

                            b1.Property<double>("Depth")
                                .HasMaxLength(255)
                                .HasColumnType("float");

                            b1.Property<double>("Height")
                                .HasMaxLength(255)
                                .HasColumnType("float");

                            b1.Property<double>("Width")
                                .HasMaxLength(255)
                                .HasColumnType("float");

                            b1.HasKey("LogisticsDetailId");

                            b1.ToTable("LogisticsDetails");

                            b1.WithOwner()
                                .HasForeignKey("LogisticsDetailId");
                        });

                    b.OwnsOne("Domain.LogisticsDetails.WeightInKg.WeightKg", "WeightKg", b1 =>
                        {
                            b1.Property<int>("LogisticsDetailId")
                                .HasColumnType("int");

                            b1.Property<double>("Weight")
                                .HasColumnType("float");

                            b1.HasKey("LogisticsDetailId");

                            b1.ToTable("LogisticsDetails");

                            b1.WithOwner()
                                .HasForeignKey("LogisticsDetailId");
                        });

                    b.Navigation("Dimension");

                    b.Navigation("WeightKg");
                });

            modelBuilder.Entity("Domain.Users.User", b =>
                {
                    b.HasOne("Domain.LogisticsDetails.LogisticsDetail", "LogisticsDetail")
                        .WithOne("User")
                        .HasForeignKey("Domain.Users.User", "LogisticsUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogisticsDetail");
                });

            modelBuilder.Entity("Domain.LogisticsDetails.LogisticsDetail", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
